#!/usr/bin/env ruby

require 'rubygems'
require 'simple-rss'
require 'open-uri'
require 'htmlentities'

class RssFeed
  attr_accessor :url, :type

  @@html = HTMLEntities.new

  def initialize(url, type=:html)
    @url  = url
    @type = type
  end

  def render filename # Assume filename has no extension
    rss = SimpleRSS.parse open(@url)

    File.open("#{filename}.tex", 'w') do |file|
      file.puts "\\usemodule[rssfeed]"
      file.puts "\\starttext"
      title       = rss.title       rescue nil
      description = to_context( @@html.decode rss.description) rescue nil
      link        = rss.link        rescue nil
      file.puts(render_title title, description, link)
      # TODO: Check pubdate and only add new items
      rss.items.each {|item| file.puts (render_item item) }
      file.puts "\\stoptitle"
      file.puts "\\stoptext"
    end

    puts %x[source /opt/context-minimals/setuptex && context --batch #{filename}]

  end

  def email filename # Assume filename has no extension
    %x[mutt -a #{filename}.pdf -- adityam_77@free.kindle.com < /dev/null]
  end

  private

  def to_context text
    context = ""
     IO.popen(["pandoc", "-f", @type.to_s, "-t",  "context"], mode="r+") do |file|
      file.puts text
      file.close_write
      context = file.read
    end
    return context
  end

  def render_url link, text
    %<\\useURL[link][#{link}][][{#{text}}]>
  end

  def render_title title, description, link
    %<\\startasciimode
      #{render_url link, "{\\ttx #{link}}"}
      \\stopasciimode
      \\setvariables
          [rssfeed]
          [title={#{title}},
           description={#{description}},
           link={\\from[link]}]
    >
  end

  def render_item item
    %<#{render_url item.link, "Read online"}
      \\starttitle[title={#{@@html.decode item.title}}][link={\\from[link]}]
        #{to_context (@@html.decode (item.content_encoded or item.description))}
      \\stoptitle
    >
  end

end

FEEDS = [ {:name=>"coding-horror", :link=>"http://feeds.feedburner.com/codinghorror/", :type=>"html"},
          {:name=>"endeavor", :link=>"http://feeds.feedburner.com/theendeavour", :type=>"html"},
          #{:name=>"IEEE-TIT", :link=>"http://ieeexplore.ieee.org/rss/TOC18.XML", :type=>"markdown"},
          #{:name=>"TeX-SE", :link=>"http://tex.stackexchange.com/feeds", :type=>"markdown"}, 
          {:name=>"mansurovs", :link=>"http://feeds.feedburner.com/mansurovs", :type=>"html"},
        ]

FEEDS.each do |feed|
    rssfeed = RssFeed.new feed[:link], feed[:type]
    puts "Generating feed #{feed[:name]}"
    rssfeed.render feed[:name]
end
